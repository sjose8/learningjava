apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'project-report'

sourceCompatibility = 1.8

// Apply the java plugin to add support for Java


// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

jacoco {
    toolVersion = "0.7.1.201405082137"
    reportsDir = file("$buildDir/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/reports/jacocoHtml"
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'com.google.inject:guice:4.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:2.0.0'
    testCompile 'com.jayway.restassured:rest-assured:2.4.0'
    testCompile 'org.mockito:mockito-all:2.0.2-beta'
    testCompile 'com.tngtech.java:junit-dataprovider:1.9.3'


}

tasks.withType(org.gradle.api.tasks.testing.Test) {
    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true
}

test {
    maxParallelForks = 1
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
    finalizedBy jacocoTestReport
}

task calculator(type: JavaExec) {
    dependsOn = ["classes"]
    classpath sourceSets.main.output.classesDir
    classpath configurations.runtime
    main = "com.bitbucket.learningjava.hotelratecalculator.Main"
}

